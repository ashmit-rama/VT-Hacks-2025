{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nconst initialState = {\n  auth: {\n    user: null,\n    isAuthenticated: false,\n    isLoading: false,\n    error: null\n  },\n  housingOptions: [],\n  currentSwipeIndex: 0,\n  collections: [],\n  searchFilters: {\n    campus: 'blacksburg',\n    priceRange: {\n      min: 0,\n      max: 2000\n    },\n    bedrooms: [],\n    bathrooms: [],\n    amenities: [],\n    distanceToCampus: 5,\n    petFriendly: false,\n    furnished: false,\n    parking: false,\n    laundry: false,\n    wifi: false,\n    moveInDate: new Date(),\n    leaseLength: 12\n  },\n  voiceInputs: [],\n  isLoading: false,\n  error: null\n};\nexport const useProximateStore = create()(persist((set, get) => ({\n  ...initialState,\n  // Auth actions\n  setUser: user => set(state => ({\n    auth: {\n      ...state.auth,\n      user,\n      isAuthenticated: !!user\n    }\n  })),\n  setAuthLoading: isLoading => set(state => ({\n    auth: {\n      ...state.auth,\n      isLoading\n    }\n  })),\n  setAuthError: error => set(state => ({\n    auth: {\n      ...state.auth,\n      error\n    }\n  })),\n  // Housing actions\n  setHousingOptions: housingOptions => set({\n    housingOptions\n  }),\n  addHousingOption: option => set(state => ({\n    housingOptions: [...state.housingOptions, option]\n  })),\n  updateHousingOption: (id, updates) => set(state => ({\n    housingOptions: state.housingOptions.map(option => option.id === id ? {\n      ...option,\n      ...updates\n    } : option)\n  })),\n  // Swipe actions\n  setCurrentSwipeIndex: currentSwipeIndex => set({\n    currentSwipeIndex\n  }),\n  incrementSwipeIndex: () => set(state => ({\n    currentSwipeIndex: state.currentSwipeIndex + 1\n  })),\n  addSwipeAction: action => {\n    // In a real app, this would be sent to the backend\n    console.log('Swipe action:', action);\n  },\n  // Collection actions\n  setCollections: collections => set({\n    collections\n  }),\n  addCollection: collection => set(state => ({\n    collections: [...state.collections, collection]\n  })),\n  updateCollection: (id, updates) => set(state => ({\n    collections: state.collections.map(collection => collection.id === id ? {\n      ...collection,\n      ...updates\n    } : collection)\n  })),\n  deleteCollection: id => set(state => ({\n    collections: state.collections.filter(collection => collection.id !== id)\n  })),\n  // Search actions\n  setSearchFilters: searchFilters => set({\n    searchFilters\n  }),\n  updateSearchFilter: (key, value) => set(state => ({\n    searchFilters: {\n      ...state.searchFilters,\n      [key]: value\n    }\n  })),\n  // Voice input actions\n  addVoiceInput: input => set(state => ({\n    voiceInputs: [...state.voiceInputs, input]\n  })),\n  setVoiceInputs: voiceInputs => set({\n    voiceInputs\n  }),\n  // General actions\n  setLoading: isLoading => set({\n    isLoading\n  }),\n  setError: error => set({\n    error\n  }),\n  reset: () => set(initialState)\n}), {\n  name: 'proximate-store',\n  partialize: state => ({\n    auth: state.auth,\n    collections: state.collections,\n    searchFilters: state.searchFilters,\n    voiceInputs: state.voiceInputs\n  })\n}));","map":{"version":3,"names":["create","persist","initialState","auth","user","isAuthenticated","isLoading","error","housingOptions","currentSwipeIndex","collections","searchFilters","campus","priceRange","min","max","bedrooms","bathrooms","amenities","distanceToCampus","petFriendly","furnished","parking","laundry","wifi","moveInDate","Date","leaseLength","voiceInputs","useProximateStore","set","get","setUser","state","setAuthLoading","setAuthError","setHousingOptions","addHousingOption","option","updateHousingOption","id","updates","map","setCurrentSwipeIndex","incrementSwipeIndex","addSwipeAction","action","console","log","setCollections","addCollection","collection","updateCollection","deleteCollection","filter","setSearchFilters","updateSearchFilter","key","value","addVoiceInput","input","setVoiceInputs","setLoading","setError","reset","name","partialize"],"sources":["/Users/akshathchity/proximate-front/src/store/index.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { AppState, User, HousingOption, Collection, SearchFilters, VoiceInput, SwipeAction } from '../types';\n\ninterface ProximateStore extends AppState {\n  // Auth actions\n  setUser: (user: User | null) => void;\n  setAuthLoading: (loading: boolean) => void;\n  setAuthError: (error: string | null) => void;\n  \n  // Housing actions\n  setHousingOptions: (options: HousingOption[]) => void;\n  addHousingOption: (option: HousingOption) => void;\n  updateHousingOption: (id: string, updates: Partial<HousingOption>) => void;\n  \n  // Swipe actions\n  setCurrentSwipeIndex: (index: number) => void;\n  incrementSwipeIndex: () => void;\n  addSwipeAction: (action: SwipeAction) => void;\n  \n  // Collection actions\n  setCollections: (collections: Collection[]) => void;\n  addCollection: (collection: Collection) => void;\n  updateCollection: (id: string, updates: Partial<Collection>) => void;\n  deleteCollection: (id: string) => void;\n  \n  // Search actions\n  setSearchFilters: (filters: SearchFilters) => void;\n  updateSearchFilter: <K extends keyof SearchFilters>(key: K, value: SearchFilters[K]) => void;\n  \n  // Voice input actions\n  addVoiceInput: (input: VoiceInput) => void;\n  setVoiceInputs: (inputs: VoiceInput[]) => void;\n  \n  // General actions\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  reset: () => void;\n}\n\nconst initialState: AppState = {\n  auth: {\n    user: null,\n    isAuthenticated: false,\n    isLoading: false,\n    error: null,\n  },\n  housingOptions: [],\n  currentSwipeIndex: 0,\n  collections: [],\n  searchFilters: {\n    campus: 'blacksburg',\n    priceRange: { min: 0, max: 2000 },\n    bedrooms: [],\n    bathrooms: [],\n    amenities: [],\n    distanceToCampus: 5,\n    petFriendly: false,\n    furnished: false,\n    parking: false,\n    laundry: false,\n    wifi: false,\n    moveInDate: new Date(),\n    leaseLength: 12,\n  },\n  voiceInputs: [],\n  isLoading: false,\n  error: null,\n};\n\nexport const useProximateStore = create<ProximateStore>()(\n  persist(\n    (set, get) => ({\n      ...initialState,\n      \n      // Auth actions\n      setUser: (user) => set((state) => ({\n        auth: { ...state.auth, user, isAuthenticated: !!user }\n      })),\n      \n      setAuthLoading: (isLoading) => set((state) => ({\n        auth: { ...state.auth, isLoading }\n      })),\n      \n      setAuthError: (error) => set((state) => ({\n        auth: { ...state.auth, error }\n      })),\n      \n      // Housing actions\n      setHousingOptions: (housingOptions) => set({ housingOptions }),\n      \n      addHousingOption: (option) => set((state) => ({\n        housingOptions: [...state.housingOptions, option]\n      })),\n      \n      updateHousingOption: (id, updates) => set((state) => ({\n        housingOptions: state.housingOptions.map(option =>\n          option.id === id ? { ...option, ...updates } : option\n        )\n      })),\n      \n      // Swipe actions\n      setCurrentSwipeIndex: (currentSwipeIndex) => set({ currentSwipeIndex }),\n      \n      incrementSwipeIndex: () => set((state) => ({\n        currentSwipeIndex: state.currentSwipeIndex + 1\n      })),\n      \n      addSwipeAction: (action) => {\n        // In a real app, this would be sent to the backend\n        console.log('Swipe action:', action);\n      },\n      \n      // Collection actions\n      setCollections: (collections) => set({ collections }),\n      \n      addCollection: (collection) => set((state) => ({\n        collections: [...state.collections, collection]\n      })),\n      \n      updateCollection: (id, updates) => set((state) => ({\n        collections: state.collections.map(collection =>\n          collection.id === id ? { ...collection, ...updates } : collection\n        )\n      })),\n      \n      deleteCollection: (id) => set((state) => ({\n        collections: state.collections.filter(collection => collection.id !== id)\n      })),\n      \n      // Search actions\n      setSearchFilters: (searchFilters) => set({ searchFilters }),\n      \n      updateSearchFilter: (key, value) => set((state) => ({\n        searchFilters: { ...state.searchFilters, [key]: value }\n      })),\n      \n      // Voice input actions\n      addVoiceInput: (input) => set((state) => ({\n        voiceInputs: [...state.voiceInputs, input]\n      })),\n      \n      setVoiceInputs: (voiceInputs) => set({ voiceInputs }),\n      \n      // General actions\n      setLoading: (isLoading) => set({ isLoading }),\n      \n      setError: (error) => set({ error }),\n      \n      reset: () => set(initialState),\n    }),\n    {\n      name: 'proximate-store',\n      partialize: (state) => ({\n        auth: state.auth,\n        collections: state.collections,\n        searchFilters: state.searchFilters,\n        voiceInputs: state.voiceInputs,\n      }),\n    }\n  )\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}