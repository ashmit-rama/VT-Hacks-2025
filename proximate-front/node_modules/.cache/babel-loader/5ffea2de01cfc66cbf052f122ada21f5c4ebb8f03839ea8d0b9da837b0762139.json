{"ast":null,"code":"import _objectSpread from\"/Users/akshathchity/proximate-front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{create}from'zustand';import{persist}from'zustand/middleware';const initialState={auth:{user:null,isAuthenticated:false,isLoading:false,error:null},housingOptions:[],currentSwipeIndex:0,collections:[],searchFilters:{campus:'blacksburg',priceRange:{min:0,max:2000},bedrooms:[],bathrooms:[],amenities:[],distanceToCampus:5,petFriendly:false,furnished:false,parking:false,laundry:false,wifi:false,moveInDate:new Date(),leaseLength:12},voiceInputs:[],isLoading:false,error:null};export const useProximateStore=create()(persist((set,get)=>_objectSpread(_objectSpread({},initialState),{},{// Auth actions\nsetUser:user=>set(state=>({auth:_objectSpread(_objectSpread({},state.auth),{},{user,isAuthenticated:!!user})})),setAuthLoading:isLoading=>set(state=>({auth:_objectSpread(_objectSpread({},state.auth),{},{isLoading})})),setAuthError:error=>set(state=>({auth:_objectSpread(_objectSpread({},state.auth),{},{error})})),// Housing actions\nsetHousingOptions:housingOptions=>set({housingOptions}),addHousingOption:option=>set(state=>({housingOptions:[...state.housingOptions,option]})),updateHousingOption:(id,updates)=>set(state=>({housingOptions:state.housingOptions.map(option=>option.id===id?_objectSpread(_objectSpread({},option),updates):option)})),// Swipe actions\nsetCurrentSwipeIndex:currentSwipeIndex=>set({currentSwipeIndex}),incrementSwipeIndex:()=>set(state=>({currentSwipeIndex:state.currentSwipeIndex+1})),addSwipeAction:action=>{// In a real app, this would be sent to the backend\nconsole.log('Swipe action:',action);},// Collection actions\nsetCollections:collections=>set({collections}),addCollection:collection=>set(state=>({collections:[...state.collections,collection]})),updateCollection:(id,updates)=>set(state=>({collections:state.collections.map(collection=>collection.id===id?_objectSpread(_objectSpread({},collection),updates):collection)})),deleteCollection:id=>set(state=>({collections:state.collections.filter(collection=>collection.id!==id)})),// Search actions\nsetSearchFilters:searchFilters=>set({searchFilters}),updateSearchFilter:(key,value)=>set(state=>({searchFilters:_objectSpread(_objectSpread({},state.searchFilters),{},{[key]:value})})),// Voice input actions\naddVoiceInput:input=>set(state=>({voiceInputs:[...state.voiceInputs,input]})),setVoiceInputs:voiceInputs=>set({voiceInputs}),// General actions\nsetLoading:isLoading=>set({isLoading}),setError:error=>set({error}),reset:()=>set(initialState)}),{name:'proximate-store',partialize:state=>({auth:state.auth,collections:state.collections,searchFilters:state.searchFilters,voiceInputs:state.voiceInputs})}));","map":{"version":3,"names":["create","persist","initialState","auth","user","isAuthenticated","isLoading","error","housingOptions","currentSwipeIndex","collections","searchFilters","campus","priceRange","min","max","bedrooms","bathrooms","amenities","distanceToCampus","petFriendly","furnished","parking","laundry","wifi","moveInDate","Date","leaseLength","voiceInputs","useProximateStore","set","get","_objectSpread","setUser","state","setAuthLoading","setAuthError","setHousingOptions","addHousingOption","option","updateHousingOption","id","updates","map","setCurrentSwipeIndex","incrementSwipeIndex","addSwipeAction","action","console","log","setCollections","addCollection","collection","updateCollection","deleteCollection","filter","setSearchFilters","updateSearchFilter","key","value","addVoiceInput","input","setVoiceInputs","setLoading","setError","reset","name","partialize"],"sources":["/Users/akshathchity/proximate-front/src/store/index.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { AppState, User, HousingOption, Collection, SearchFilters, VoiceInput, SwipeAction } from '../types';\n\ninterface ProximateStore extends AppState {\n  // Auth actions\n  setUser: (user: User | null) => void;\n  setAuthLoading: (loading: boolean) => void;\n  setAuthError: (error: string | null) => void;\n  \n  // Housing actions\n  setHousingOptions: (options: HousingOption[]) => void;\n  addHousingOption: (option: HousingOption) => void;\n  updateHousingOption: (id: string, updates: Partial<HousingOption>) => void;\n  \n  // Swipe actions\n  setCurrentSwipeIndex: (index: number) => void;\n  incrementSwipeIndex: () => void;\n  addSwipeAction: (action: SwipeAction) => void;\n  \n  // Collection actions\n  setCollections: (collections: Collection[]) => void;\n  addCollection: (collection: Collection) => void;\n  updateCollection: (id: string, updates: Partial<Collection>) => void;\n  deleteCollection: (id: string) => void;\n  \n  // Search actions\n  setSearchFilters: (filters: SearchFilters) => void;\n  updateSearchFilter: <K extends keyof SearchFilters>(key: K, value: SearchFilters[K]) => void;\n  \n  // Voice input actions\n  addVoiceInput: (input: VoiceInput) => void;\n  setVoiceInputs: (inputs: VoiceInput[]) => void;\n  \n  // General actions\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  reset: () => void;\n}\n\nconst initialState: AppState = {\n  auth: {\n    user: null,\n    isAuthenticated: false,\n    isLoading: false,\n    error: null,\n  },\n  housingOptions: [],\n  currentSwipeIndex: 0,\n  collections: [],\n  searchFilters: {\n    campus: 'blacksburg',\n    priceRange: { min: 0, max: 2000 },\n    bedrooms: [],\n    bathrooms: [],\n    amenities: [],\n    distanceToCampus: 5,\n    petFriendly: false,\n    furnished: false,\n    parking: false,\n    laundry: false,\n    wifi: false,\n    moveInDate: new Date(),\n    leaseLength: 12,\n  },\n  voiceInputs: [],\n  isLoading: false,\n  error: null,\n};\n\nexport const useProximateStore = create<ProximateStore>()(\n  persist(\n    (set, get) => ({\n      ...initialState,\n      \n      // Auth actions\n      setUser: (user) => set((state) => ({\n        auth: { ...state.auth, user, isAuthenticated: !!user }\n      })),\n      \n      setAuthLoading: (isLoading) => set((state) => ({\n        auth: { ...state.auth, isLoading }\n      })),\n      \n      setAuthError: (error) => set((state) => ({\n        auth: { ...state.auth, error }\n      })),\n      \n      // Housing actions\n      setHousingOptions: (housingOptions) => set({ housingOptions }),\n      \n      addHousingOption: (option) => set((state) => ({\n        housingOptions: [...state.housingOptions, option]\n      })),\n      \n      updateHousingOption: (id, updates) => set((state) => ({\n        housingOptions: state.housingOptions.map(option =>\n          option.id === id ? { ...option, ...updates } : option\n        )\n      })),\n      \n      // Swipe actions\n      setCurrentSwipeIndex: (currentSwipeIndex) => set({ currentSwipeIndex }),\n      \n      incrementSwipeIndex: () => set((state) => ({\n        currentSwipeIndex: state.currentSwipeIndex + 1\n      })),\n      \n      addSwipeAction: (action) => {\n        // In a real app, this would be sent to the backend\n        console.log('Swipe action:', action);\n      },\n      \n      // Collection actions\n      setCollections: (collections) => set({ collections }),\n      \n      addCollection: (collection) => set((state) => ({\n        collections: [...state.collections, collection]\n      })),\n      \n      updateCollection: (id, updates) => set((state) => ({\n        collections: state.collections.map(collection =>\n          collection.id === id ? { ...collection, ...updates } : collection\n        )\n      })),\n      \n      deleteCollection: (id) => set((state) => ({\n        collections: state.collections.filter(collection => collection.id !== id)\n      })),\n      \n      // Search actions\n      setSearchFilters: (searchFilters) => set({ searchFilters }),\n      \n      updateSearchFilter: (key, value) => set((state) => ({\n        searchFilters: { ...state.searchFilters, [key]: value }\n      })),\n      \n      // Voice input actions\n      addVoiceInput: (input) => set((state) => ({\n        voiceInputs: [...state.voiceInputs, input]\n      })),\n      \n      setVoiceInputs: (voiceInputs) => set({ voiceInputs }),\n      \n      // General actions\n      setLoading: (isLoading) => set({ isLoading }),\n      \n      setError: (error) => set({ error }),\n      \n      reset: () => set(initialState),\n    }),\n    {\n      name: 'proximate-store',\n      partialize: (state) => ({\n        auth: state.auth,\n        collections: state.collections,\n        searchFilters: state.searchFilters,\n        voiceInputs: state.voiceInputs,\n      }),\n    }\n  )\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}