{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{Mic,MicOff,Volume2,Languages,CheckCircle}from\"lucide-react\";import{useSpeechRecognition}from\"react-speech-recognition\";import{useProximateStore}from\"../../store\";import\"./VoiceInput.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VoiceInput=_ref=>{let{onTranscript,language=\"en-US\",disabled=false}=_ref;const[isRecording,setIsRecording]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const[transcript,setTranscript]=useState(\"\");const[confidence,setConfidence]=useState(0);const[detectedLanguage,setDetectedLanguage]=useState(language);const[showConfirmation,setShowConfirmation]=useState(false);const{addVoiceInput}=useProximateStore();const mediaRecorderRef=useRef(null);const audioChunksRef=useRef([]);const{transcript:speechTranscript,listening,resetTranscript,browserSupportsSpeechRecognition}=useSpeechRecognition();useEffect(()=>{if(speechTranscript){setTranscript(speechTranscript);setConfidence(0.85);// Mock confidence score\n}},[speechTranscript]);const startRecording=async()=>{if(disabled)return;try{const stream=await navigator.mediaDevices.getUserMedia({audio:true});mediaRecorderRef.current=new MediaRecorder(stream);audioChunksRef.current=[];mediaRecorderRef.current.ondataavailable=event=>{audioChunksRef.current.push(event.data);};mediaRecorderRef.current.onstop=()=>{const audioBlob=new Blob(audioChunksRef.current,{type:\"audio/wav\"});processAudioBlob(audioBlob);};mediaRecorderRef.current.start();setIsRecording(true);}catch(error){console.error(\"Error starting recording:\",error);}};const stopRecording=()=>{if(mediaRecorderRef.current&&isRecording){mediaRecorderRef.current.stop();setIsRecording(false);}};const processAudioBlob=async audioBlob=>{setIsProcessing(true);try{// Mock processing - in real app, this would call your AI service\nconst mockTranscript=transcript||\"I need a place near campus with parking and laundry\";const mockEntities=extractEntities(mockTranscript);const voiceInput={id:Date.now().toString(),userId:\"current-user\",// Would be from auth context\naudioBlob,transcript:mockTranscript,language:detectedLanguage,confidence,extractedEntities:mockEntities,createdAt:new Date()};addVoiceInput(voiceInput);if(onTranscript){onTranscript(mockTranscript,mockEntities);}setShowConfirmation(true);setTimeout(()=>setShowConfirmation(false),3000);}catch(error){console.error(\"Error processing audio:\",error);}finally{setIsProcessing(false);}};const extractEntities=text=>{const entities=[];const lowerText=text.toLowerCase();// Extract commute modes\nif(lowerText.includes(\"walk\")||lowerText.includes(\"walking\")){entities.push({type:\"commute_mode\",value:\"walking\",confidence:0.9,startIndex:lowerText.indexOf(\"walk\"),endIndex:lowerText.indexOf(\"walk\")+4});}if(lowerText.includes(\"bike\")||lowerText.includes(\"biking\")){entities.push({type:\"commute_mode\",value:\"biking\",confidence:0.9,startIndex:lowerText.indexOf(\"bike\"),endIndex:lowerText.indexOf(\"bike\")+4});}// Extract amenities\nconst amenities=[\"parking\",\"laundry\",\"wifi\",\"furnished\",\"pet friendly\"];amenities.forEach(amenity=>{if(lowerText.includes(amenity)){entities.push({type:\"amenity\",value:amenity,confidence:0.8,startIndex:lowerText.indexOf(amenity),endIndex:lowerText.indexOf(amenity)+amenity.length});}});// Extract budget\nconst budgetMatch=text.match(/\\$(\\d+)/);if(budgetMatch){entities.push({type:\"budget\",value:parseInt(budgetMatch[1]),confidence:0.9,startIndex:budgetMatch.index||0,endIndex:(budgetMatch.index||0)+budgetMatch[0].length});}return entities;};const handleLanguageChange=newLanguage=>{setDetectedLanguage(newLanguage);};if(!browserSupportsSpeechRecognition){return/*#__PURE__*/_jsx(\"div\",{className:\"voice-input-error\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Your browser doesn't support speech recognition.\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"voice-input-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"voice-input-header\",children:[/*#__PURE__*/_jsx(Languages,{className:\"language-icon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"language-label\",children:detectedLanguage===\"en-US\"?\"English\":detectedLanguage===\"es-ES\"?\"Spanish\":detectedLanguage===\"fr-FR\"?\"French\":\"English\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"voice-input-main\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"voice-button \".concat(isRecording?\"recording\":\"\",\" \").concat(disabled?\"disabled\":\"\"),onClick:isRecording?stopRecording:startRecording,disabled:disabled||isProcessing,children:isRecording?/*#__PURE__*/_jsx(MicOff,{size:24}):/*#__PURE__*/_jsx(Mic,{size:24})}),/*#__PURE__*/_jsxs(\"div\",{className:\"voice-status\",children:[isRecording&&/*#__PURE__*/_jsxs(\"div\",{className:\"recording-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pulse\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Recording...\"})]}),isProcessing&&/*#__PURE__*/_jsxs(\"div\",{className:\"processing-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Processing...\"})]}),showConfirmation&&/*#__PURE__*/_jsxs(\"div\",{className:\"confirmation-indicator\",children:[/*#__PURE__*/_jsx(CheckCircle,{size:20}),/*#__PURE__*/_jsx(\"span\",{children:\"Preferences captured!\"})]})]})]}),transcript&&/*#__PURE__*/_jsxs(\"div\",{className:\"transcript-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"transcript-header\",children:[/*#__PURE__*/_jsx(Volume2,{size:16}),/*#__PURE__*/_jsx(\"span\",{children:\"Transcript\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"confidence\",children:[\"(\",Math.round(confidence*100),\"% confidence)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"transcript-text\",children:transcript})]}),/*#__PURE__*/_jsx(\"div\",{className:\"voice-input-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Speak your housing preferences and we'll extract the key details automatically.\"})})]});};export default VoiceInput;","map":{"version":3,"names":["React","useState","useEffect","useRef","Mic","MicOff","Volume2","Languages","CheckCircle","useSpeechRecognition","useProximateStore","jsx","_jsx","jsxs","_jsxs","VoiceInput","_ref","onTranscript","language","disabled","isRecording","setIsRecording","isProcessing","setIsProcessing","transcript","setTranscript","confidence","setConfidence","detectedLanguage","setDetectedLanguage","showConfirmation","setShowConfirmation","addVoiceInput","mediaRecorderRef","audioChunksRef","speechTranscript","listening","resetTranscript","browserSupportsSpeechRecognition","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","processAudioBlob","start","error","console","stopRecording","stop","mockTranscript","mockEntities","extractEntities","voiceInput","id","Date","now","toString","userId","extractedEntities","createdAt","setTimeout","text","entities","lowerText","toLowerCase","includes","value","startIndex","indexOf","endIndex","amenities","forEach","amenity","length","budgetMatch","match","parseInt","index","handleLanguageChange","newLanguage","className","children","concat","onClick","size","Math","round"],"sources":["/Users/akshathchity/proximate-front/src/components/VoiceInput/VoiceInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Mic, MicOff, Volume2, Languages, CheckCircle } from \"lucide-react\";\nimport { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useProximateStore } from \"../../store\";\nimport { VoiceInput as VoiceInputType, ExtractedEntity } from \"../../types\";\nimport \"./VoiceInput.css\";\n\ninterface VoiceInputProps {\n  onTranscript?: (transcript: string, entities: ExtractedEntity[]) => void;\n  language?: string;\n  disabled?: boolean;\n}\n\nconst VoiceInput: React.FC<VoiceInputProps> = ({\n  onTranscript,\n  language = \"en-US\",\n  disabled = false,\n}) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const [confidence, setConfidence] = useState(0);\n  const [detectedLanguage, setDetectedLanguage] = useState(language);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const { addVoiceInput } = useProximateStore();\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioChunksRef = useRef<Blob[]>([]);\n\n  const {\n    transcript: speechTranscript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n\n  useEffect(() => {\n    if (speechTranscript) {\n      setTranscript(speechTranscript);\n      setConfidence(0.85); // Mock confidence score\n    }\n  }, [speechTranscript]);\n\n  const startRecording = async () => {\n    if (disabled) return;\n\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/wav\",\n        });\n        processAudioBlob(audioBlob);\n      };\n\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  const processAudioBlob = async (audioBlob: Blob) => {\n    setIsProcessing(true);\n\n    try {\n      // Mock processing - in real app, this would call your AI service\n      const mockTranscript =\n        transcript || \"I need a place near campus with parking and laundry\";\n      const mockEntities = extractEntities(mockTranscript);\n\n      const voiceInput: VoiceInputType = {\n        id: Date.now().toString(),\n        userId: \"current-user\", // Would be from auth context\n        audioBlob,\n        transcript: mockTranscript,\n        language: detectedLanguage,\n        confidence,\n        extractedEntities: mockEntities,\n        createdAt: new Date(),\n      };\n\n      addVoiceInput(voiceInput);\n\n      if (onTranscript) {\n        onTranscript(mockTranscript, mockEntities);\n      }\n\n      setShowConfirmation(true);\n      setTimeout(() => setShowConfirmation(false), 3000);\n    } catch (error) {\n      console.error(\"Error processing audio:\", error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const extractEntities = (text: string): ExtractedEntity[] => {\n    const entities: ExtractedEntity[] = [];\n    const lowerText = text.toLowerCase();\n\n    // Extract commute modes\n    if (lowerText.includes(\"walk\") || lowerText.includes(\"walking\")) {\n      entities.push({\n        type: \"commute_mode\",\n        value: \"walking\",\n        confidence: 0.9,\n        startIndex: lowerText.indexOf(\"walk\"),\n        endIndex: lowerText.indexOf(\"walk\") + 4,\n      });\n    }\n\n    if (lowerText.includes(\"bike\") || lowerText.includes(\"biking\")) {\n      entities.push({\n        type: \"commute_mode\",\n        value: \"biking\",\n        confidence: 0.9,\n        startIndex: lowerText.indexOf(\"bike\"),\n        endIndex: lowerText.indexOf(\"bike\") + 4,\n      });\n    }\n\n    // Extract amenities\n    const amenities = [\n      \"parking\",\n      \"laundry\",\n      \"wifi\",\n      \"furnished\",\n      \"pet friendly\",\n    ];\n    amenities.forEach((amenity) => {\n      if (lowerText.includes(amenity)) {\n        entities.push({\n          type: \"amenity\",\n          value: amenity,\n          confidence: 0.8,\n          startIndex: lowerText.indexOf(amenity),\n          endIndex: lowerText.indexOf(amenity) + amenity.length,\n        });\n      }\n    });\n\n    // Extract budget\n    const budgetMatch = text.match(/\\$(\\d+)/);\n    if (budgetMatch) {\n      entities.push({\n        type: \"budget\",\n        value: parseInt(budgetMatch[1]),\n        confidence: 0.9,\n        startIndex: budgetMatch.index || 0,\n        endIndex: (budgetMatch.index || 0) + budgetMatch[0].length,\n      });\n    }\n\n    return entities;\n  };\n\n  const handleLanguageChange = (newLanguage: string) => {\n    setDetectedLanguage(newLanguage);\n  };\n\n  if (!browserSupportsSpeechRecognition) {\n    return (\n      <div className=\"voice-input-error\">\n        <p>Your browser doesn't support speech recognition.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"voice-input-container\">\n      <div className=\"voice-input-header\">\n        <Languages className=\"language-icon\" />\n        <span className=\"language-label\">\n          {detectedLanguage === \"en-US\"\n            ? \"English\"\n            : detectedLanguage === \"es-ES\"\n            ? \"Spanish\"\n            : detectedLanguage === \"fr-FR\"\n            ? \"French\"\n            : \"English\"}\n        </span>\n      </div>\n\n      <div className=\"voice-input-main\">\n        <button\n          className={`voice-button ${isRecording ? \"recording\" : \"\"} ${\n            disabled ? \"disabled\" : \"\"\n          }`}\n          onClick={isRecording ? stopRecording : startRecording}\n          disabled={disabled || isProcessing}\n        >\n          {isRecording ? <MicOff size={24} /> : <Mic size={24} />}\n        </button>\n\n        <div className=\"voice-status\">\n          {isRecording && (\n            <div className=\"recording-indicator\">\n              <div className=\"pulse\"></div>\n              <span>Recording...</span>\n            </div>\n          )}\n\n          {isProcessing && (\n            <div className=\"processing-indicator\">\n              <div className=\"spinner\"></div>\n              <span>Processing...</span>\n            </div>\n          )}\n\n          {showConfirmation && (\n            <div className=\"confirmation-indicator\">\n              <CheckCircle size={20} />\n              <span>Preferences captured!</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {transcript && (\n        <div className=\"transcript-container\">\n          <div className=\"transcript-header\">\n            <Volume2 size={16} />\n            <span>Transcript</span>\n            <span className=\"confidence\">\n              ({Math.round(confidence * 100)}% confidence)\n            </span>\n          </div>\n          <div className=\"transcript-text\">{transcript}</div>\n        </div>\n      )}\n\n      <div className=\"voice-input-footer\">\n        <p>\n          Speak your housing preferences and we'll extract the key details\n          automatically.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default VoiceInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}