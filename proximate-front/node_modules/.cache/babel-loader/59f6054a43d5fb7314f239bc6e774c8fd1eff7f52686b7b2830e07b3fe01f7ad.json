{"ast":null,"code":"var _jsxFileName = \"/Users/akshathchity/proximate-front/src/components/VoiceInput/VoiceInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Mic, MicOff, Volume2, Languages, CheckCircle } from \"lucide-react\";\nimport { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useProximateStore } from \"../../store\";\nimport \"./VoiceInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = ({\n  onTranscript,\n  language = \"en-US\",\n  disabled = false\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const [confidence, setConfidence] = useState(0);\n  const [detectedLanguage, setDetectedLanguage] = useState(language);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const {\n    addVoiceInput\n  } = useProximateStore();\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const {\n    transcript: speechTranscript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  useEffect(() => {\n    if (speechTranscript) {\n      setTranscript(speechTranscript);\n      setConfidence(0.85); // Mock confidence score\n    }\n  }, [speechTranscript]);\n  const startRecording = async () => {\n    if (disabled) return;\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/wav\"\n        });\n        processAudioBlob(audioBlob);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const processAudioBlob = async audioBlob => {\n    setIsProcessing(true);\n    try {\n      // Mock processing - in real app, this would call your AI service\n      const mockTranscript = transcript || \"I need a place near campus with parking and laundry\";\n      const mockEntities = extractEntities(mockTranscript);\n      const voiceInput = {\n        id: Date.now().toString(),\n        userId: \"current-user\",\n        // Would be from auth context\n        audioBlob,\n        transcript: mockTranscript,\n        language: detectedLanguage,\n        confidence,\n        extractedEntities: mockEntities,\n        createdAt: new Date()\n      };\n      addVoiceInput(voiceInput);\n      if (onTranscript) {\n        onTranscript(mockTranscript, mockEntities);\n      }\n      setShowConfirmation(true);\n      setTimeout(() => setShowConfirmation(false), 3000);\n    } catch (error) {\n      console.error(\"Error processing audio:\", error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const extractEntities = text => {\n    const entities = [];\n    const lowerText = text.toLowerCase();\n\n    // Extract commute modes\n    if (lowerText.includes(\"walk\") || lowerText.includes(\"walking\")) {\n      entities.push({\n        type: \"commute_mode\",\n        value: \"walking\",\n        confidence: 0.9,\n        startIndex: lowerText.indexOf(\"walk\"),\n        endIndex: lowerText.indexOf(\"walk\") + 4\n      });\n    }\n    if (lowerText.includes(\"bike\") || lowerText.includes(\"biking\")) {\n      entities.push({\n        type: \"commute_mode\",\n        value: \"biking\",\n        confidence: 0.9,\n        startIndex: lowerText.indexOf(\"bike\"),\n        endIndex: lowerText.indexOf(\"bike\") + 4\n      });\n    }\n\n    // Extract amenities\n    const amenities = [\"parking\", \"laundry\", \"wifi\", \"furnished\", \"pet friendly\"];\n    amenities.forEach(amenity => {\n      if (lowerText.includes(amenity)) {\n        entities.push({\n          type: \"amenity\",\n          value: amenity,\n          confidence: 0.8,\n          startIndex: lowerText.indexOf(amenity),\n          endIndex: lowerText.indexOf(amenity) + amenity.length\n        });\n      }\n    });\n\n    // Extract budget\n    const budgetMatch = text.match(/\\$(\\d+)/);\n    if (budgetMatch) {\n      entities.push({\n        type: \"budget\",\n        value: parseInt(budgetMatch[1]),\n        confidence: 0.9,\n        startIndex: budgetMatch.index || 0,\n        endIndex: (budgetMatch.index || 0) + budgetMatch[0].length\n      });\n    }\n    return entities;\n  };\n  const handleLanguageChange = newLanguage => {\n    setDetectedLanguage(newLanguage);\n  };\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-input-error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your browser doesn't support speech recognition.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-input-header\",\n      children: [/*#__PURE__*/_jsxDEV(Languages, {\n        className: \"language-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"language-label\",\n        children: detectedLanguage === \"en-US\" ? \"English\" : detectedLanguage === \"es-ES\" ? \"Spanish\" : detectedLanguage === \"fr-FR\" ? \"French\" : \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-input-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `voice-button ${isRecording ? \"recording\" : \"\"} ${disabled ? \"disabled\" : \"\"}`,\n        onClick: isRecording ? stopRecording : startRecording,\n        disabled: disabled || isProcessing,\n        children: isRecording ? /*#__PURE__*/_jsxDEV(MicOff, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-status\",\n        children: [isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Recording...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Processing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Preferences captured!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-header\",\n        children: [/*#__PURE__*/_jsxDEV(Volume2, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"confidence\",\n          children: [\"(\", Math.round(confidence * 100), \"% confidence)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-text\",\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-input-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Speak your housing preferences and we'll extract the key details automatically.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"1wcvAJfc+VImHfZ2JJ98Q9qJhVM=\", false, function () {\n  return [useProximateStore, useSpeechRecognition];\n});\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Mic","MicOff","Volume2","Languages","CheckCircle","useSpeechRecognition","useProximateStore","jsxDEV","_jsxDEV","VoiceInput","onTranscript","language","disabled","_s","isRecording","setIsRecording","isProcessing","setIsProcessing","transcript","setTranscript","confidence","setConfidence","detectedLanguage","setDetectedLanguage","showConfirmation","setShowConfirmation","addVoiceInput","mediaRecorderRef","audioChunksRef","speechTranscript","listening","resetTranscript","browserSupportsSpeechRecognition","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","processAudioBlob","start","error","console","stopRecording","stop","mockTranscript","mockEntities","extractEntities","voiceInput","id","Date","now","toString","userId","extractedEntities","createdAt","setTimeout","text","entities","lowerText","toLowerCase","includes","value","startIndex","indexOf","endIndex","amenities","forEach","amenity","length","budgetMatch","match","parseInt","index","handleLanguageChange","newLanguage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","Math","round","_c","$RefreshReg$"],"sources":["/Users/akshathchity/proximate-front/src/components/VoiceInput/VoiceInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Mic, MicOff, Volume2, Languages, CheckCircle } from \"lucide-react\";\nimport { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useProximateStore } from \"../../store\";\nimport { VoiceInput as VoiceInputType, ExtractedEntity } from \"../../types\";\nimport \"./VoiceInput.css\";\n\ninterface VoiceInputProps {\n  onTranscript?: (transcript: string, entities: ExtractedEntity[]) => void;\n  language?: string;\n  disabled?: boolean;\n}\n\nconst VoiceInput: React.FC<VoiceInputProps> = ({\n  onTranscript,\n  language = \"en-US\",\n  disabled = false,\n}) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [transcript, setTranscript] = useState(\"\");\n  const [confidence, setConfidence] = useState(0);\n  const [detectedLanguage, setDetectedLanguage] = useState(language);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n\n  const { addVoiceInput } = useProximateStore();\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioChunksRef = useRef<Blob[]>([]);\n\n  const {\n    transcript: speechTranscript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n\n  useEffect(() => {\n    if (speechTranscript) {\n      setTranscript(speechTranscript);\n      setConfidence(0.85); // Mock confidence score\n    }\n  }, [speechTranscript]);\n\n  const startRecording = async () => {\n    if (disabled) return;\n\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: \"audio/wav\",\n        });\n        processAudioBlob(audioBlob);\n      };\n\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"Error starting recording:\", error);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  const processAudioBlob = async (audioBlob: Blob) => {\n    setIsProcessing(true);\n\n    try {\n      // Mock processing - in real app, this would call your AI service\n      const mockTranscript =\n        transcript || \"I need a place near campus with parking and laundry\";\n      const mockEntities = extractEntities(mockTranscript);\n\n      const voiceInput: VoiceInputType = {\n        id: Date.now().toString(),\n        userId: \"current-user\", // Would be from auth context\n        audioBlob,\n        transcript: mockTranscript,\n        language: detectedLanguage,\n        confidence,\n        extractedEntities: mockEntities,\n        createdAt: new Date(),\n      };\n\n      addVoiceInput(voiceInput);\n\n      if (onTranscript) {\n        onTranscript(mockTranscript, mockEntities);\n      }\n\n      setShowConfirmation(true);\n      setTimeout(() => setShowConfirmation(false), 3000);\n    } catch (error) {\n      console.error(\"Error processing audio:\", error);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const extractEntities = (text: string): ExtractedEntity[] => {\n    const entities: ExtractedEntity[] = [];\n    const lowerText = text.toLowerCase();\n\n    // Extract commute modes\n    if (lowerText.includes(\"walk\") || lowerText.includes(\"walking\")) {\n      entities.push({\n        type: \"commute_mode\",\n        value: \"walking\",\n        confidence: 0.9,\n        startIndex: lowerText.indexOf(\"walk\"),\n        endIndex: lowerText.indexOf(\"walk\") + 4,\n      });\n    }\n\n    if (lowerText.includes(\"bike\") || lowerText.includes(\"biking\")) {\n      entities.push({\n        type: \"commute_mode\",\n        value: \"biking\",\n        confidence: 0.9,\n        startIndex: lowerText.indexOf(\"bike\"),\n        endIndex: lowerText.indexOf(\"bike\") + 4,\n      });\n    }\n\n    // Extract amenities\n    const amenities = [\n      \"parking\",\n      \"laundry\",\n      \"wifi\",\n      \"furnished\",\n      \"pet friendly\",\n    ];\n    amenities.forEach((amenity) => {\n      if (lowerText.includes(amenity)) {\n        entities.push({\n          type: \"amenity\",\n          value: amenity,\n          confidence: 0.8,\n          startIndex: lowerText.indexOf(amenity),\n          endIndex: lowerText.indexOf(amenity) + amenity.length,\n        });\n      }\n    });\n\n    // Extract budget\n    const budgetMatch = text.match(/\\$(\\d+)/);\n    if (budgetMatch) {\n      entities.push({\n        type: \"budget\",\n        value: parseInt(budgetMatch[1]),\n        confidence: 0.9,\n        startIndex: budgetMatch.index || 0,\n        endIndex: (budgetMatch.index || 0) + budgetMatch[0].length,\n      });\n    }\n\n    return entities;\n  };\n\n  const handleLanguageChange = (newLanguage: string) => {\n    setDetectedLanguage(newLanguage);\n  };\n\n  if (!browserSupportsSpeechRecognition) {\n    return (\n      <div className=\"voice-input-error\">\n        <p>Your browser doesn't support speech recognition.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"voice-input-container\">\n      <div className=\"voice-input-header\">\n        <Languages className=\"language-icon\" />\n        <span className=\"language-label\">\n          {detectedLanguage === \"en-US\"\n            ? \"English\"\n            : detectedLanguage === \"es-ES\"\n            ? \"Spanish\"\n            : detectedLanguage === \"fr-FR\"\n            ? \"French\"\n            : \"English\"}\n        </span>\n      </div>\n\n      <div className=\"voice-input-main\">\n        <button\n          className={`voice-button ${isRecording ? \"recording\" : \"\"} ${\n            disabled ? \"disabled\" : \"\"\n          }`}\n          onClick={isRecording ? stopRecording : startRecording}\n          disabled={disabled || isProcessing}\n        >\n          {isRecording ? <MicOff size={24} /> : <Mic size={24} />}\n        </button>\n\n        <div className=\"voice-status\">\n          {isRecording && (\n            <div className=\"recording-indicator\">\n              <div className=\"pulse\"></div>\n              <span>Recording...</span>\n            </div>\n          )}\n\n          {isProcessing && (\n            <div className=\"processing-indicator\">\n              <div className=\"spinner\"></div>\n              <span>Processing...</span>\n            </div>\n          )}\n\n          {showConfirmation && (\n            <div className=\"confirmation-indicator\">\n              <CheckCircle size={20} />\n              <span>Preferences captured!</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {transcript && (\n        <div className=\"transcript-container\">\n          <div className=\"transcript-header\">\n            <Volume2 size={16} />\n            <span>Transcript</span>\n            <span className=\"confidence\">\n              ({Math.round(confidence * 100)}% confidence)\n            </span>\n          </div>\n          <div className=\"transcript-text\">{transcript}</div>\n        </div>\n      )}\n\n      <div className=\"voice-input-footer\">\n        <p>\n          Speak your housing preferences and we'll extract the key details\n          automatically.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default VoiceInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}